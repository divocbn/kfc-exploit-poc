export interface Root {
  categories: RootCategory[];
}

export interface RootCategory {
  skuid:       string;
  url:         string;
  name:        string;
  products:    null;
  dname:       Description;
  description: Description;
  categories:  Category[];
}

export interface Category {
  skuid:     string;
  name:      string;
  url:       string;
  imageName: string;
  dname:     Description;
  products:  Product[];
}

export interface Description {
  lang:  Lang;
  value: string;
}

export enum Lang {
  DeDE = "de-DE",
}

export interface Product {
  dname:       Description;
  description: Description;
  items:       Item[];
}

export interface Item {
  id:               string;
  name:             string;
  dname:            Description;
  description:      Description;
  url:              string;
  price:            number;
  isCustomize:      boolean;
  categoryId:       string;
  imageName:        string;
  isRegMobileUser?: boolean;
  isQuickCombo?:    boolean;
  modgrps?:         any[];
  posItemId:        string;
}

async function getGenericMenu(): Promise<Root> {
  const res = await fetch('https://api.kfc.de/menu/kfcde-generic-menu')
 
  /**
   * No proper error handling
   * cause its a poc lol
   */
  if (!res.ok) {
    throw new Error('Failed to fetch generic menu.')
  }
 
  return res.json()
}

export const kfcGenericMenuApi = {
  getGenericMenu
}